<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--扫描注解-->
    <context:component-scan base-package="com.jazzyshi.springmvc.controller"/>
    <!-- 注解驱动 -->
    <!-- org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping -->
    <!-- org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter -->
    <mvc:annotation-driven/>
    <!--静态资源-->
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>

    <!--自定义视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/" />
<!--        <property name="suffix" value=".jsp" />-->
    </bean>

    <!--配置拦截器-拦截所有控制器-->
    <mvc:interceptors>
        <bean class="com.jazzyshi.springmvc.interceptor.DemoInterceptor"/>
    </mvc:interceptors>
    <!--配置拦截器-拦截特定url-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/demo"/>
            <mvc:mapping path="/demo1"/>
            <bean class="com.jazzyshi.springmvc.interceptor.DemoInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--
     配置拦截器栈（多个拦截器同时生效）
     顺序：先进后出
     执行顺序和在springmvc.xml中配置的顺序有关
     For Examole:
     先配置拦截器A，再配置B
     preHandle(A) > preHandle(B) > 控制器方法 > postHandle(B) > postHanle(A) > JSP > afterCompletion(B) > afterCompletion(A)
    -->
</beans>